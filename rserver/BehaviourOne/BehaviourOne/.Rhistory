rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
head(df,14)
summary(df)
info()
object_size(df)
ob
object.size(df)
ls
ls
ls()
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
plot1
plot2
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
dfi
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
heaat_plot
heat_plot
tsne_res <- tsne(as.matrix(down_df[, column_list])) tsne_kmeans <- kmeans(tsne_res, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(tsne_res[, 1], tsne_res[, 2],                        shape = down_df$AssignmentID,                        color = tsne_colors) plot2 <- plot2 + theme(legend.position = "none")
rtsne_res <- Rtsne(as.matrix(down_df[, subcluster_column_list]),                        check_duplicates = FALSE,                        pca = FALSE) tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors) plot2 <- plot2 + theme(legend.position = "none")
plot2
rxK
rxKmeans
rxKmeans
library("MicrosoftML")
install.packages("MicrosoftML")
library(RevoScaleR)
install.packages("RevoScaleR")
install.packages("RevoScaleR")
install.packages("RevoScaleR")
install.packages("RevoScaleR")
library(RevoScaleR)
install.packages("Rtsne")
install.packages("ggplot2")
install.packages("RODBC")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
library(RODBC)
install.packages("RODBC")
library("RODBC")
df
df
library(RevoScaleR)
?rxImport
tempdir()
tempdir()
tempdir()
tempdir()
tempdir()
dir
dirname()
dirname(sys.frame(1)$ofile)
source("behaviour_full.R", chdir = T)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
?rxKmeans
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
df_sub
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
n
n
n
n
df_sub
df_subcenters
head(df_subcenters)
n
n
n
n
n
head(df_subcenters,10)
clust_column
cl
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
plot1
warrnings()
warnings()
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
trained_model$centers
trained_model$cluster
?rxKmeans
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
proc.time()
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
plot1
Sys.time()
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
all_log
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
all_log
cat(all_log)
df_downsampled
head(df_downsampled)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
head(df_downsampled)
head(df)
tail(df)
rtsn
rtsne_res$Y
rtsne_res$Y[1]
rtsne_res$Y[2]
rtsne_res$Y[,2]
rtsne_res$Y[,1]
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
head(df)
tail(df)
all_log
colnames(df)
ttt<-c()
ttt[10]
ttt[10]==1
ttt[10]==0
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
df[,column_list]
head(df[,column_list])
sum(is.na(df))
sum(is.na(df[,column_list]))
head(df[is.na(df),])
?is.na
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
n
sum(is.na(df))
df[is.na(df),]
df[is.na(df)]
head(df[is.na(df)])
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
n
head(is.na(dfi))
head(dfi)
head(dfi[is.na(dfi)])
head(dfi[is.na(dfi),])
dfi[is.na(dfi)]
head(dfi)
sum(is.na(dfi))
sum(is.na(df))
sum(is.na(df))
Q
source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R", encoding = "Windows-1252")
head(df)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
n
sum(is.na(df))
sum(is.na(dfi))
head(is.na(dfi))
nrow(is.na(dfi))
rowS(is.na(dfi))
rowSums(is.na(dfi))
sum(is.na(dfi))
sum(is.na(dfi))
sum(is.na(df))
dfi[dfi[,cust_column]==-1,]
sum(is.na(df))
sum(is.na(df))
new_col
nr_input_fields
i
c
c
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
n
sum(is.na(df))
sum(is.na(dfi))
head(df)
head(dfi$NEASOCIATE)
rowSums(dfi)
colSums(dfi)
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
plot2
plot1
summary(df)
summary(dfi)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
plot2
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
plot2
plot3d <- scatter3d(             down_df[, x_dim], down_df[, y_dim], down_df[, z_dim],             xlab = x_dim_lbl,             ylab = y_dim_lbl,             zlab = z_dim_lbl,             groups = down_df[, c_dim],             surface = FALSE, grid = FALSE, ellipsoid = TRUE,             sphere.size = 2)
plot2
plot3d
plot3d
plot3d <- scatter3d(             down_df[, x_dim], down_df[, y_dim], down_df[, z_dim],             xlab = x_dim_lbl,             ylab = y_dim_lbl,             zlab = z_dim_lbl,             groups = down_df[, c_dim],             surface = FALSE, grid = FALSE, ellipsoid = TRUE,             sphere.size = 2)
head(down_df)
?rxK
?xKmeans
?rxKmeans
plot2
plot1
head(df_downsampled,20)
head(df_downsampled,30)
head(df_downsampled,25)
which.max(df_downsampled)
which.max(df_downsampled[1,])
which.max(df_downsampled[1,])
ALL_CATEGS <- c("BATISTE", "STREPSILS", "PHARMA", "COSMETICE",                 "DERMOCOSMETICE", "BABY", "NEASOCIATE") ALL_BRANDS <- c("BrandGeneral", "DR_HART", "NUROFEN", "APIVITA", "AVENE", "L_OCCITANE", "VICHY",                 "BIODERMA", "LA_ROCHE_POSAY", "L_ERBOLARIO", "PARASINUS", "TRUSSA", "SORTIS", "NESTLE",                 "OXYANCE", "TERTENSIF", "ASPENTER", "ALPHA")
which.max(df_downsampled[1,ALL_CATEGS])
ALL_CATEGS
which.max(df_downsampled[1,ALL_CATEGS])
which.max(df[1,ALL_CATEGS])
head(df)
df[1,ALL_CATEGS]
which.max(df[1,ALL_CATEGS])
head(down_df)
ttt = which.max(df[1,ALL_CATEGS])
ttt
type
typeof(ttt)
colnames(df[,ttt])
colnames(df[,1])
colnames(df[,2])
colnames(df[,ALL_CATEGS])[ttt]
timeit("Labeling down_df ", down_df <- GetMaxes(dfd, "BESTOF", ALL_BRANDS, ALL_CATEGS))
GetMaxes = function(dfd, newfield, categ1, categ2) {     for (i in 1:nrow(dfd)) {         best_categ1_index <- which.max(dfd[i, categ1])         best_categ1 <- colnames(dfd[i, categ1])[best_categ1_index]         best_categ2_index <- which.max(dfd[i, categ2])         best_categ2 <- colnames(dfd[i, categ2])[best_categ2_index]         dfd[i, newfield] <- paste(best_categ1, ",", best_categ2)     }     return(dfd) }
timeit("Labeling down_df ", down_df <- GetMaxes(dfd, "BESTOF", ALL_BRANDS, ALL_CATEGS))
timeit("Labeling down_df ", down_df <- GetMaxes(down_df, "BESTOF", ALL_BRANDS, ALL_CATEGS))
head(down_df)
head(df,1)
df[df$IDCLU==1 & df$SCLID==1,]
head(df[df$IDCLU==1 & df$SCLID==1,])
head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS])
summary(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS])
summary(df[df[,ALL_COLUMNS]==-1,ALL_COLUMNS])
summary(df[df[,ALL_COLUMNS]==0.001,ALL_COLUMNS])
summary(df[df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS]==0.001,ALL_COLUMNS])
summary(df[df$IDCLU==1 & df$SCLID==1 & df[,ALL_COLUMNS]==0.001,ALL_COLUMNS])
summary(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS])
head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS],50)
head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS],60)
head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS],55)
summary(head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS],55))
head(df[df[,ALL_COLUMNS]==0.001,])
head(df[df[df$IDCLU==1 & df$CLID==1,ALL_COLUMNS]==0.001,])
head(df[df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS]==0.001,])
head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS])
summary(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS])
summary(head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS]))
head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS])
head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS])
summary(head(df[df$IDCLU==1 & df$SCLID==1,ALL_COLUMNS]))
head(down_df)
tail(down_df)
GetMaxes = function(dfd, newfield, categ1, categ2) {     for (i in 1:nrow(dfd)) {         best_categ1_index <- which.max(dfd[i, categ1])         best_categ1 <- colnames(dfd[i, categ1])[best_categ1_index]         best_categ2_index <- which.max(dfd[i, categ2])         best_categ2 <- colnames(dfd[i, categ2])[best_categ2_index]         dfd[i, newfield] <- paste0(best_categ1, ",", best_categ2)     }     return(dfd) }
timeit("Labeling down_df ", down_df <- GetMaxes(down_df, "BESTOF", ALL_BRANDS, ALL_CATEGS))
tail(down_df)
rtsne_res <- Rtsne(as.matrix(down_df[, subcluster_column_list]),                        check_duplicates = FALSE,                        pca = FALSE) tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors) plot2 <- plot1 + geom_text(aes_string(label = "BESTOF"),                                    color = "black", size = 3) plot2 <- plot2 + theme(legend.position = "none") plot2
heaD(down_df$BESTOF)
head(down_df$BESTOF)
tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors) plot2 <- plot1 + geom_text(aes_string(label = down_df$BESTOF),                                    color = "black", size = 3) plot2 <- plot2 + theme(legend.position = "none") plot2
tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors) plot2 <- plot1 + geom_text(aes(label = down_df$BESTOF),                                color = "black", size = 3) plot2 <- plot2 + theme(legend.position = "none") plot2
tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors) plot2 <- plot2 + theme(legend.position = "none") plot2
tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors) plot2 <- plot1 + geom_text(aes(label = down_df$BESTOF),                                color = "black", size = 1) plot2 <- plot2 + theme(legend.position = "none") plot2
tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors) plot2 <- plot2 + geom_text(aes(label = down_df$BESTOF),                                color = "black", size = 1) plot2 <- plot2 + theme(legend.position = "none") plot2
tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors) plot2 <- plot2 + geom_text(aes(label = down_df$BESTOF),                                color = "black", size = 2) plot2 <- plot2 + theme(legend.position = "none") plot2
plot1
head(df)
df <- data.frame()
df
df["X"] <- c(-100,-10,-3,-2,-1,0,1,0,1)
df[,"X"] <- c(-100,-10,-3,-2,-1,0,1,0,1)
df[["X"]] <- c(-100,-10,-3,-2,-1,0,1,0,1)
df <- data.frame(X = c(-100, -10, -3, -2, -1, 0, 1, 0, 1), Y = c(-200, -20, -10, -7, -3, 2,3, 0, 1))
df
column_list <- colnames(df)
column_list
for (i in 1:nr_input_fields) {     col_name <- column_list[i]     new_col <- paste0("P", i, "_", substr(col_name, 1, 3))     norm_columns <- c(norm_columns, new_col)     is_log = 0     if (length(log_list) >= i)         is_log <- log_list[i]     if ((is_log == 1) || (log_all_columns)) {         fdelta <- min(df[df[, col_name] <= 0, col_name])         f_log <- function(x) {             return(x <- (x - fdelta) * 1e-5)         }         df[df[, col_name] <= 0, col_name] <- lapply(df[df[, col_name] <= 0, col_name], f_log)         df[, new_col] <- log(df[, col_name])     } else {         df[, new_col] <- df[, col_name]     }     min_c <- min(df[, new_col])     max_c <- max(df[, new_col]) + 1e-1 # add "epsilon" for numerical safety     df[, new_col] <- (df[, new_col] - min_c) / max_c }
nr_input_fields <- length(column_list) for (i in 1:nr_input_fields) {     col_name <- column_list[i]     new_col <- paste0("P", i, "_", substr(col_name, 1, 3))     norm_columns <- c(norm_columns, new_col)     is_log = 0     if (length(log_list) >= i)         is_log <- log_list[i]     if ((is_log == 1) || (log_all_columns)) {         fdelta <- min(df[df[, col_name] <= 0, col_name])         f_log <- function(x) {             return(x <- (x - fdelta) * 1e-5)         }         df[df[, col_name] <= 0, col_name] <- lapply(df[df[, col_name] <= 0, col_name], f_log)         df[, new_col] <- log(df[, col_name])     } else {         df[, new_col] <- df[, col_name]     }     min_c <- min(df[, new_col])     max_c <- max(df[, new_col]) + 1e-1 # add "epsilon" for numerical safety     df[, new_col] <- (df[, new_col] - min_c) / max_c }
norm_columns <- c()
## preprocessing norm_columns <- c() nr_input_fields <- length(column_list) for (i in 1:nr_input_fields) {     col_name <- column_list[i]     new_col <- paste0("P", i, "_", substr(col_name, 1, 3))     norm_columns <- c(norm_columns, new_col)     is_log = 0     if (length(log_list) >= i)         is_log <- log_list[i]     if ((is_log == 1) || (log_all_columns)) {         fdelta <- min(df[df[, col_name] <= 0, col_name])         f_log <- function(x) {             return(x <- (x - fdelta) * 1e-5)         }         df[df[, col_name] <= 0, col_name] <- lapply(df[df[, col_name] <= 0, col_name], f_log)         df[, new_col] <- log(df[, col_name])     } else {         df[, new_col] <- df[, col_name]     }     min_c <- min(df[, new_col])     max_c <- max(df[, new_col]) + 1e-1 # add "epsilon" for numerical safety     df[, new_col] <- (df[, new_col] - min_c) / max_c } ## end preprocessing
log_list <- c(1,1)
log_all_columns <- 0
log_all_columns <- 1
## preprocessing norm_columns <- c() nr_input_fields <- length(column_list) for (i in 1:nr_input_fields) {     col_name <- column_list[i]     new_col <- paste0("P", i, "_", substr(col_name, 1, 3))     norm_columns <- c(norm_columns, new_col)     is_log = 0     if (length(log_list) >= i)         is_log <- log_list[i]     if ((is_log == 1) || (log_all_columns)) {         fdelta <- min(df[df[, col_name] <= 0, col_name])         f_log <- function(x) {             return(x <- (x - fdelta) * 1e-5)         }         df[df[, col_name] <= 0, col_name] <- lapply(df[df[, col_name] <= 0, col_name], f_log)         df[, new_col] <- log(df[, col_name])     } else {         df[, new_col] <- df[, col_name]     }     min_c <- min(df[, new_col])     max_c <- max(df[, new_col]) + 1e-1 # add "epsilon" for numerical safety     df[, new_col] <- (df[, new_col] - min_c) / max_c } ## end preprocessing
col_name
df[,col_name]<=0
new_col
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
for (i in 1:nr_input_fields) {     col_name <- column_list[i]     new_col <- paste0("P", i, "_", substr(col_name, 1, 3))     norm_columns <- c(norm_columns, new_col)     is_log = 0     if (length(log_list) >= i)         is_log <- log_list[i]     if ((is_log == 1) || (log_all_columns)) {         fdelta <- min(df[df[, col_name] <= 0, col_name])         f_log <- function(x) {             return(x <- (x - fdelta) * 1e-5)         }         df[df[, col_name] <= 0, col_name] <- lapply(df[df[, col_name] <= 0, col_name], f_log)         df[, new_col] <- log(df[, col_name])     } else {         df[, new_col] <- df[, col_name]     }     min_c <- min(df[, new_col])     max_c <- max(df[, new_col]) + 1e-1 # add "epsilon" for numerical safety     df[, new_col] <- (df[, new_col] - min_c) / max_c }
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
n
n
n
n
n
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
n
n
n
n
n
n
n
n
n
n
df
df
fdelta
fdelta
df
df
df
df
Q
df
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
n
n
n
n
norm
norm_columns
df
n
n
is_log
log_list
log_all
log_all_columns
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
n
n
n
n
n
n
n
n
n
fdelta
n
n
df
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
n
df
Q
flog(0)
f_log(0)
print(f_log(0))
(100*1e-5)
 lapply(df[,"X"],f_log)
df
df <- data.frame(X = c(-100, -10, -3, -2, -1, 0, 1, 0, 1), Y = c(-200, -20, -10, -7, -3, 2, 3, 0, 1))
 lapply(df[,"X"],f_log)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
lapply(df[, col_name], f_log)
df[, col_name]
lapply(df[c(col_name)], f_log)
log(df[,col_name])
lapply(df[c(col_name)], f_log)
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
lapply(df[c(col_name)], f_log)
df[,col_name] - fdelta
Q
df
df <- data.frame(X = c(-100, -10, -3, -2, -1, 0, 1, 0, 1), Y = c(-200, -20, -10, -7, -3, 2, 3, 0, 1))
df[df[,col_name]<=0,col_name]
(df[df[,col_name]<=0,col_name] - fdelta) * 1e-5
df[df[, col_name] <= 0, col_name] <- (df[df[, col_name] <= 0, col_name] - fdelta) * 1e-5
df
df
col_name = "Y"
df[df[, col_name] <= 0, col_name] <- (df[df[, col_name] <= 0, col_name] - fdelta) * 1e-5
df
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
n
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
exp(df$Y)
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
df1 <- data.frame()
df1$exp <- df$X
df1 <- data.frame(exp=df$X)
df1
df
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
df1
data.frame(df1,df)
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
prep_time
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
df[,new_col]
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
n
df
n
n
(df[, new_col] - min_c) / max_c
max(df[,new_col])
df[,new_col] - min_c
1--106
(1000--200)/1000
(-199--200)/1000
(100-5)/95
(100-20)/100
(100-20)/80
(100-20)/(80+1e-1)
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
df
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/test_script.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
timeit("Labeling down_df ", down_df <- GetMaxes(down_df, "BESTOF", ALL_BRANDS, ALL_CATEGS))
head(down_df)
down_df$BESTOF
plot2
rtsne_res <- Rtsne(as.matrix(down_df[, subcluster_column_list]),                        check_duplicates = FALSE,                        pca = FALSE) tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors)
plot2 <- plot2 + geom_text(aes_string(label = down_df$BESTOF),                                    color = "black", size = 2)
"/"
"\/"
GetMaxes = function(dfd, newfield, categ1, categ2) {     logger(paste0("Generating max columns [", categ1, ",", categ2, "]"))     t0_maxes <- proc.time()     for (i in 1:nrow(dfd)) {         best_categ1_index <- which.max(dfd[i, categ1])         best_categ1 <- colnames(dfd[i, categ1])[best_categ1_index]         best_categ2_index <- which.max(dfd[i, categ2])         best_categ2 <- colnames(dfd[i, categ2])[best_categ2_index]         dfd[i, newfield] <- paste0(best_categ1, "/", best_categ2)     }     t1_maxes <- proc.time()     t_maxes <- t1_maxes[3] - t0_maxes[3]     logger(sprintf("Done generating max columns in %.2f sec", t_maxes))     return(dfd) }
timeit("Labeling down_df ", down_df <- GetMaxes(down_df, "BESTOF", ALL_BRANDS, ALL_CATEGS))
SHOW_TSNE_KMPL = TRUE SHOW_TSNE_FULL = FALSE t0_tsne <- proc.time() timeit("Labeling down_df ", down_df <- GetMaxes(down_df, "BESTOF", ALL_BRANDS, ALL_CATEGS)) if (SHOW_TSNE_KMPL) {     STD_TSNE <- FALSE     if (STD_TSNE) {         library(tsne)         tsne_res <- tsne(as.matrix(down_df[, column_list]))         tsne_kmeans <- kmeans(tsne_res, centers = 4, nstart = 100)         tsne_colors <- as.factor(tsne_kmeans$cluster)         down_df$VisualClustering <- tsne_kmeans$cluster         plot2 <- qplot(tsne_res[, 1], tsne_res[, 2],                        shape = down_df$AssignmentID,                        color = tsne_colors)         plot2 <- plot2 + theme(legend.position = "none")         plot2     } else {         library(Rtsne)         rtsne_res <- Rtsne(as.matrix(down_df[, subcluster_column_list]),                        check_duplicates = FALSE,                        pca = FALSE)         tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100)         tsne_colors <- as.factor(tsne_kmeans$cluster)         down_df$VisualClustering <- tsne_kmeans$cluster         plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors)         plot2 <- plot2 + geom_text(aes_string(label = down_df$BESTOF),                                    color = "black", size = 2)         plot2 <- plot2 + theme(legend.position = "none")         plot2     } } if (SHOW_TSNE_FULL) {     rtsne_res <- Rtsne(as.matrix(df[, column_list]),                        check_duplicates = FALSE)     plot3 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                    shape = df$cluster, color = df$cluster)     plot3 <- plot2 + theme(legend.position = "none")     plot3 } t1_tsne <- proc.time() t_tsne <- t1_tsne[3] - t0_tsne logger(sprintf("TSNE executed in %.2f sec", t_tsne))
down_df$BESTOF
?geom_text
rtsne_res <- Rtsne(as.matrix(down_df[, subcluster_column_list]),                        check_duplicates = FALSE,                        pca = FALSE) tsne_kmeans <- kmeans(rtsne_res$Y, centers = 4, nstart = 100) tsne_colors <- as.factor(tsne_kmeans$cluster) down_df$VisualClustering <- tsne_kmeans$cluster plot2 <- qplot(rtsne_res$Y[, 1], rtsne_res$Y[, 2],                        shape = down_df$ID,                        color = tsne_colors)
plot2
plott <- plot2 + geom_text(aes(label=down_df$BESTOF), color = "black", size=2)
plott
file.exists("test.dat")
file.exists("hyperloop_saved_data.xdf")
install.package("text2vec")
install.packages("text2vec")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
n
n
n
n
n
n
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(df)
install.packaages("rword2vec")
install.packages("rword2vec")
install.packages("tm")
library(tm)
?Corpus
Corpus(df$a)
Corpus(df$AllText)
colnames(df)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
vector_src
corpus
dtm <- DocumentTermMatrix(corpus)
dtm
gsub("[^[:alnum:]///' ]", "", "as$5@$#!%^%/<>+-qrewqewr")
gsub("[^[:alnum:]///' ]", "", "as$5@$#!%^%/<>+-qrewqewr,.")
x = "as$5@$#!%^%/<>+-qrewqewr,."
x
iconv(x, 'Latin-9')
y <- "BUSON╪20MMCIPROD-invalid"
y
iconv(y, 'Latin-9')
a<-data.frame(aa=c("asasdf","asfd d d d ", "BUSON╪20MMCIPROD-invalid","BUSON╪20MMCIPROD-invalid"))
a
iconv(a$aa, 'Latin-9')
a$aa <- iconv(a$aa, 'Latin-9')
a
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
dtm
df_text <- as.data.frame(as.matrix(dtm))
dtm1 <- removeSparseTerms(dtm, 0.96)
dtm1
df_text <- as.data.frame(as.matrix(dtm1))
df_text
head(df_text)
nrow(c(1,2,3))
as.numeric(nrow(c(1,2,3)))
a<-1
typeof(a)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
typeof(df_text)
head(df_text)
df_text <- data.frame(Name = df$ItemName, df_text)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(df_text)
colnames(df)
head(df)
?removeSparseTerms
typeof(df)
type(df)
type
typeof(get(df))
clasS(df)
class(df)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
class(dtm_large)
class(dtm_clean_large)
class(df)
head(dftxt_large)
df[grep("HART",df$AllText),]
df[grep("HART",df$AllText),]
head(df[grep("HART",df$AllText),])
head(df[grep("DR",df$AllText),])
head(df[grep("DR_HART",df$AllText),])
head(df[grep("BIODERMA",df$AllText),])
head(dftxt_large)
head(dftxt_large)
head(df[grep("BIODERMA",df$AllText),])
dtm_clean_large
cat(dt_clean_large)
cat(dtm_clean_large)
print(dtm_clean_large)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(dftxt_large)
head(df[grep("BIODERMA",df$AllText),])
head(df[grep("DRHART",df$AllText),])
nrow(df[grep("DRHART",df$AllText),])
nrow(df[grep("DRHART",df$AllText),ItemName])
nrow(df[grep("DRHART",df$AllText),"ItemName"])
df[grep("DRHART",df$AllText),"ItemName"]
dtm
head(df,10)
head(df[length(df$AllText)>90,],10)
length(df$AllText)
nchar(df$AllText)
max(nchar(df$AllText))
t <- nchar(df$AllText)
maX(t)
max(t)
class(t)
type(t)
typeof(t)
t
t[1]
t <- as.list(t)
max(t)
t <- as.vector(t)
ax(t)
max(t)
?max
summary(t)
summary(df)
t <- nchar(df$AllText)
summary(t)
head(df[nchar(df$AllText>400),])
head(df[nchar(df$AllText>400),AllText],1)
head(df[nchar(df$AllText>400),"AllText"],1)
df[nchar(df$AllText>400),"AllText"]
nrow(df[nchar(df$AllText>400),"AllText"])
nrow(df[nchar(df$AllText>400),])
nrow(df[nchar(df$AllText)>400,])
head(df[nchar(df$AllText)>400,])
head(df[nchar(df$AllText)>400,],10)
head(df[nchar(df$AllText)>400,],30)
df[nchar(df$AllText)>400,]
df[nchar(df$AllText)>400 & !grep("invalid",df$AllText),]
df[nchar(df$AllText)>200 & !grep("invalid",df$AllText),]
df[nchar(df$AllText)>100 & !grep("invalid",df$AllText),]
t <- df[nchar(df$AllText)>300,]
t[!grep("invalid",t$AllText),]
head(t)
head(grep("invalid",t$AllText))
head(grep("invalid",t$ItemName))
nrow(t)
head(t,10)
head(t,15)
nrow(grep("invalid",t$ItemName))
count(grep("invalid",t$ItemName))
length(grep("invalid",t$ItemName))
nrow(t)
t[-grep("invalid",t$ItemName),]
t <- df[nchar(df$AllText)>300,]
t[-grep("invalid",t$ItemName),]
head(dftxt_large,1)
leng
length(grep("invalid",df$ItemName))
t[-grep("invalid",t$ItemName),]
head(dftxt_large[-grep("invalid",dftxt_large$Name),],1)
head(dftxt_small[-grep("invalid",dftxt_small$Name),],1)
head(dftxt_large[-grep("invalid",dftxt_small$Name),],1)
head(dftxt_large[-grep("invalid",dftxt_large$Name),],1)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
dftxt <- as.data.frame(as.matrix(dtm))
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(dftxt_large,1)
head(dftxt_large,1)
head(dftxt_large,1)
head(dftxt_large[grep("STERIMAR", dftxt_large$Name),], 1)
dftxt_large[grep("STERIMAR", dftxt_large$Name),]
dftxt_large[14696,]
dftxt_small[14696,]
t = dftxt_small[14696,]
col(t)
col(t)[which(!t == 0)]
t[,col(t)[which(!t == 0)]]
head(col(df)[which(!df == 0)])
head(col(dftxt_large)[which(!dftxt_large == 0)])
col(dftxt_large)[which(!dftxt_large == 0)]
col(dftxt_large)[which(!dftxt_large == 0)]
gc()
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(mtxt)
col(mtxt)[which(!mtxt == 0)]
rowSums(mtxt)
max(roSums(mtxt))
max(rowSums(mtxt))
t <- dftxt[26607,]
t
t[,col(t)[which(!t == 0)]]
rowSums(mtxt)
dftxt[26606, col(dftxt[26606,])[which(!dftxt[26606,] == 0)]]
i <- 26535 print(dftxt[i, col(dftxt[i,])[which(!dftxt[i,] == 0)]])
i <- 26500 print(dftxt[i, col(dftxt[i,])[which(!dftxt[i,] == 0)]])
colnames(dftxt_large)[grep("hart", colnames(dftxt_large))]
colnames(dftxt_small)[grep("hart", colnames(dftxt_large))]
grep("hart", colnames(dftxt_large))
colnames(dftxt_small)[grep("hart", colnames(dftxt_small))]
grep("hart", colnames(dftxt_small))
grep("hart", colnames(dftxt_small))[1]
grep("hart", colnames(dftxt_large))[1]
paste(colnames(dftxt_small))
paste0(colnames(dftxt_small))
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
n
n
icols
grep("HART", colnames(dfin))
colnames(dfin)
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
n
c
grep("hart | dr", colnames(dfin))
grep("hart | dr", colnames(dftxt))
grep("hart | dr", colnames(dftxt))
length("hart")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
?regex
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
