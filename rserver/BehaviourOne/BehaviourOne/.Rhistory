x
iconv(x, 'Latin-9')
y <- "BUSON╪20MMCIPROD-invalid"
y
iconv(y, 'Latin-9')
a<-data.frame(aa=c("asasdf","asfd d d d ", "BUSON╪20MMCIPROD-invalid","BUSON╪20MMCIPROD-invalid"))
a
iconv(a$aa, 'Latin-9')
a$aa <- iconv(a$aa, 'Latin-9')
a
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
dtm
df_text <- as.data.frame(as.matrix(dtm))
dtm1 <- removeSparseTerms(dtm, 0.96)
dtm1
df_text <- as.data.frame(as.matrix(dtm1))
df_text
head(df_text)
nrow(c(1,2,3))
as.numeric(nrow(c(1,2,3)))
a<-1
typeof(a)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
typeof(df_text)
head(df_text)
df_text <- data.frame(Name = df$ItemName, df_text)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(df_text)
colnames(df)
head(df)
?removeSparseTerms
typeof(df)
type(df)
type
typeof(get(df))
clasS(df)
class(df)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
class(dtm_large)
class(dtm_clean_large)
class(df)
head(dftxt_large)
df[grep("HART",df$AllText),]
df[grep("HART",df$AllText),]
head(df[grep("HART",df$AllText),])
head(df[grep("DR",df$AllText),])
head(df[grep("DR_HART",df$AllText),])
head(df[grep("BIODERMA",df$AllText),])
head(dftxt_large)
head(dftxt_large)
head(df[grep("BIODERMA",df$AllText),])
dtm_clean_large
cat(dt_clean_large)
cat(dtm_clean_large)
print(dtm_clean_large)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(dftxt_large)
head(df[grep("BIODERMA",df$AllText),])
head(df[grep("DRHART",df$AllText),])
nrow(df[grep("DRHART",df$AllText),])
nrow(df[grep("DRHART",df$AllText),ItemName])
nrow(df[grep("DRHART",df$AllText),"ItemName"])
df[grep("DRHART",df$AllText),"ItemName"]
dtm
head(df,10)
head(df[length(df$AllText)>90,],10)
length(df$AllText)
nchar(df$AllText)
max(nchar(df$AllText))
t <- nchar(df$AllText)
maX(t)
max(t)
class(t)
type(t)
typeof(t)
t
t[1]
t <- as.list(t)
max(t)
t <- as.vector(t)
ax(t)
max(t)
?max
summary(t)
summary(df)
t <- nchar(df$AllText)
summary(t)
head(df[nchar(df$AllText>400),])
head(df[nchar(df$AllText>400),AllText],1)
head(df[nchar(df$AllText>400),"AllText"],1)
df[nchar(df$AllText>400),"AllText"]
nrow(df[nchar(df$AllText>400),"AllText"])
nrow(df[nchar(df$AllText>400),])
nrow(df[nchar(df$AllText)>400,])
head(df[nchar(df$AllText)>400,])
head(df[nchar(df$AllText)>400,],10)
head(df[nchar(df$AllText)>400,],30)
df[nchar(df$AllText)>400,]
df[nchar(df$AllText)>400 & !grep("invalid",df$AllText),]
df[nchar(df$AllText)>200 & !grep("invalid",df$AllText),]
df[nchar(df$AllText)>100 & !grep("invalid",df$AllText),]
t <- df[nchar(df$AllText)>300,]
t[!grep("invalid",t$AllText),]
head(t)
head(grep("invalid",t$AllText))
head(grep("invalid",t$ItemName))
nrow(t)
head(t,10)
head(t,15)
nrow(grep("invalid",t$ItemName))
count(grep("invalid",t$ItemName))
length(grep("invalid",t$ItemName))
nrow(t)
t[-grep("invalid",t$ItemName),]
t <- df[nchar(df$AllText)>300,]
t[-grep("invalid",t$ItemName),]
head(dftxt_large,1)
leng
length(grep("invalid",df$ItemName))
t[-grep("invalid",t$ItemName),]
head(dftxt_large[-grep("invalid",dftxt_large$Name),],1)
head(dftxt_small[-grep("invalid",dftxt_small$Name),],1)
head(dftxt_large[-grep("invalid",dftxt_small$Name),],1)
head(dftxt_large[-grep("invalid",dftxt_large$Name),],1)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
dftxt <- as.data.frame(as.matrix(dtm))
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(dftxt_large,1)
head(dftxt_large,1)
head(dftxt_large,1)
head(dftxt_large[grep("STERIMAR", dftxt_large$Name),], 1)
dftxt_large[grep("STERIMAR", dftxt_large$Name),]
dftxt_large[14696,]
dftxt_small[14696,]
t = dftxt_small[14696,]
col(t)
col(t)[which(!t == 0)]
t[,col(t)[which(!t == 0)]]
head(col(df)[which(!df == 0)])
head(col(dftxt_large)[which(!dftxt_large == 0)])
col(dftxt_large)[which(!dftxt_large == 0)]
col(dftxt_large)[which(!dftxt_large == 0)]
gc()
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
head(mtxt)
col(mtxt)[which(!mtxt == 0)]
rowSums(mtxt)
max(roSums(mtxt))
max(rowSums(mtxt))
t <- dftxt[26607,]
t
t[,col(t)[which(!t == 0)]]
rowSums(mtxt)
dftxt[26606, col(dftxt[26606,])[which(!dftxt[26606,] == 0)]]
i <- 26535 print(dftxt[i, col(dftxt[i,])[which(!dftxt[i,] == 0)]])
i <- 26500 print(dftxt[i, col(dftxt[i,])[which(!dftxt[i,] == 0)]])
colnames(dftxt_large)[grep("hart", colnames(dftxt_large))]
colnames(dftxt_small)[grep("hart", colnames(dftxt_large))]
grep("hart", colnames(dftxt_large))
colnames(dftxt_small)[grep("hart", colnames(dftxt_small))]
grep("hart", colnames(dftxt_small))
grep("hart", colnames(dftxt_small))[1]
grep("hart", colnames(dftxt_large))[1]
paste(colnames(dftxt_small))
paste0(colnames(dftxt_small))
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
n
n
icols
grep("HART", colnames(dfin))
colnames(dfin)
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
n
c
grep("hart | dr", colnames(dfin))
grep("hart | dr", colnames(dftxt))
grep("hart | dr", colnames(dftxt))
length("hart")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
?regex
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/behaviour_full.R")
df <- data.frame(x=c(1,1,1,1),y=c(2,2,2,2),z=c(3,3,3,3))
df
df[,-1]
df[,-"z"]
ttt <- "z"
df[,-ttt]
ncol(df)
df[,ttt] <- NULL
df
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
n
colnames(df)
head(df)
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
n
Q
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
summary_info <- data.frame(Proposed.Models, Cross.Accuracy, Training.Time) summary_info <- summary_info[order(summary_info$Cross.Accuracy),] print(summary_info)
Proposed.Models
Cross.Accuracy
Training.Time
c_time
ttt <-timeit(paste0("Predict Testing data with best model: ", Best.Model$method),        testpred <- predict(Best.Model, df_test)        ) confusionMatrix(testpred, df_test$classe)
ttt
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
nrow(df_test[df_test$classe==1,])
nrow(df_test)
nrow(df_valid[df_valid$classe==1,])
nrow(df_valid)
nrow(df_train[df_train$classe==1,])
nrow(df_train)
nrow(df[df$classe==1,])
head(df)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
head(df)
rowSums(df[df$classe==1,])
head(df[df$classe==1,])
summary(df[df$classe==1,])
Inspect.Fields <- c("M", "MARGIN")
rowSums(df[df$classe==1,Inspect.Fields])
colSums(df[df$classe==1,Inspect.Fields])
colSums(df[df$classe==1,Inspect.Fields])/4.5
colSums(df[df$classe==1,Inspect.Fields])[1]
colSums(df[df$classe==1,Inspect.Fields])[2]
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
Proposed.Models
Train.Accuracy
Cross.Accuracy
Cross.Recall
cfm_valid$overall
cfm_valid
cfm_valid$table
cfm_valid$byClass
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
head(df_test)
df_test$Prediction <- testpred
testpred
nrow(df_test[df_test$classe == 1,])
print(head(df_test[df$classe == 1 & df_test$Prediction == 1,]))
confusionMatrix(testpred, df_test$classe, posivite = '1')
nrow(testpred)
length(testpred)
length(df_test$classe)
confusionMatrix(testpred, df_test$classe)
confusionMatrix(testpred, df_test$classe, positive = '1')
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
logger(sprintf("Total positives: %d", nrow(df_test[df_test$classe == 1,]))) print(head(df_test[df$classe == 1 & df_test$Prediction == 1,]))
print(head(df_test[df_test$classe == 1 & df_test$Prediction == 1,]))
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
print(tail(df_right))
All.Fields <- c("PartnerId", Inspect.Fields, Predictor.Fields)
df_right <- df_test[df_test$classe == 1 & df_test$Prediction == 1,] df_right <- df_right[order(df_right[, - Inspect.Fields[1]]),]
df_right <- df_test[df_test$classe == 1 & df_test$Prediction == 1,] df_right <- df_right[order(df_right[, Inspect.Fields[1]],                            decreasing = TRUE),]
head(df_right)
options(width=200)
options(width=200)
head(df_right)
summary_info
All.Fields
head(df_right[,All.Fields])
head(df_right[,All.Fields],30)
head(df_right)
head(df_right[,All.Fields],30)
head(df_right,30)
test_conf <- confusionMatrix(testpred, df_test$classe, positive = '1')
test_cong
test_conf
head(df_right[,All.Fields],30)
summary_info
df_initial <- df_right[,All.Fields]
df_initia
df_initial
head(df_initial,30)
head(df_right,30)
head(df_initial,30)
head(df_right,30)
head(df_test)
head(df_test,30)
for (i in 1:Nr.Proposed.Models) {     Used.Data[i] <- Table.Name } summary_info <- data.frame(Used.Data, Proposed.Models, Train.Accuracy,                            Cross.Accuracy, Cross.Recall,                            Training.Time) summary_info <- summary_info[order(summary_info$Cross.Accuracy),] print(summary_info)
Table.Name <- "_Attrib_20170324_v1"
for (i in 1:Nr.Proposed.Models) {     Used.Data[i] <- Table.Name } summary_info <- data.frame(Used.Data, Proposed.Models, Train.Accuracy,                            Cross.Accuracy, Cross.Recall,                            Training.Time) summary_info <- summary_info[order(summary_info$Cross.Accuracy),] print(summary_info)
Used.Data <- c()
for (i in 1:Nr.Proposed.Models) {     Used.Data[i] <- Table.Name } summary_info <- data.frame(Used.Data, Proposed.Models, Train.Accuracy,                            Cross.Accuracy, Cross.Recall,                            Training.Time) summary_info <- summary_info[order(summary_info$Cross.Accuracy),] print(summary_info)
head(df_)
head(df_initial,30)
head(df_right,30)
head(df_initial,30)
nrow(df[df$classe==1,])
head(df_right,30)
nrow(df)
nrow(df[df$classe==1,])
colSums(df_right[Inspect.Fields])
colSums(df[df$classe==1,Inspect.Fields])
preds <- predict(Best.Model,df)
df$Predicted <- preds
culSums(df[df$Predicted==1 & df$classe==1, Inspect.Fields])
colSums(df[df$Predicted==1 & df$classe==1, Inspect.Fields])
nrow(df[df$Predicted==1 & df$classe==1, ])
nrow(df[df$classe==1,])
colSums(df[df$Predicted==1 & df$classe==1, Inspect.Fields])
colSums(df[df$classe==1,Inspect.Fields])
library(doMC)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
p_cluster
cfm_valid
cfm_valid$overall$Kappa
cfm_valid$overall
cfm_valid$overall["Kappa"]
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
Proposed.Models <- c(     "bayesglm",     "lda",     "rpart",     "xgboost",     "adaboost",     )
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
library(x)
library(xgboost)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
ttt <- "dadad","asdasd"
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
n
Q
Proposed.Models[1:3]
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
length(all_log)
all_log
size(all_log)
Log.Lines <- c() for (c_model in 1:Nr.Proposed.Models) {     Log.Lines[c_model] <- all_log } summary_info$Log <- Log.Lines
summary_info
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
library(iris)
install.packages("iris")
data(iris)
iris
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
iris
length(iris)
nrow(iris)
summary(iris)
y_pred
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
iris[-Species]
iris[select(-Species)]
iris[,!iris]
iris[,!Species]
iris[,!"Species"]
iris[,!(names(iris) %in% "Species")]
setdiff(names(iris), "Species")
x_train
x_train <- iris[intrain, pred_vars]
pred_vars <- setdiff(names(iris), "Species")
x_train <- iris[intrain, pred_vars]
x_train
nrow(x_train)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
xclf
xclf$finalModel
xclf$finalModel$tuneValue
ttt <- xclf$finalModel$tuneValue
ttt
as.string(xclf$finalModel$tuneValue)
toString(xclf$finalModel$tuneValue)
sprintf("%s", xclf$finalModel$tuneValue)
>deparse(substitute(xclf$finalModel$tuneValue))
deparse(substitute(xclf$finalModel$tuneValue))
deparse(xclf$finalModel$tuneValue)
xclf$bestTune
xclf$results
deparse(xclf$bestTune[1])
deparse(names(xclf$bestTune))
deparse(names(xclf$bestTune[1]))
sprintf("%s", names(xclf$bestTune[1]))
get_tune_params <- function(caret_model) {     best <- caret_model$bestTune     str <- ""     for (i in 1:length(names(best))) {         str <- str + sprintf("%s=%.2f", names(best[i]), best[i])     } }
get_tune_params <- function(caret_model) {     best <- caret_model$bestTune     str <- ""     for (i in 1:length(names(best))) {         str <- str + sprintf("%s=%.2f", names(best[i]), best[i])     }     return(str) }
get_tune_params(xclf)
get_tune_params(xclf)
length(names(xclf$bestTune))
b <- xclf$bestTune
v[1]
b[1]
b[2]
b[6]
sprintf("%s=%.2f ", names(b[1]), b[1])
get_tune_params <- function(caret_model) {     best <- caret_model$bestTune     sparams <- ""     for (i in 1:length(names(best))) {         sparams <- sparams + sprintf("%s=%.2f ", names(best[i]), best[i])     }     return(str) }
get_tune_params(xclf)
get_tune_params <- function(caret_model) {     best <- caret_model$bestTune     sparams <- ""     for (i in 1:length(names(best))) {         sparams <- paste0(sparams, sprintf("%s=%.2f ", names(best[i]), best[i]))     }     return(str) }
get_tune_params(xclf)
get_tune_params <- function(caret_model) {     best <- caret_model$bestTune     sparams <- ""     for (i in 1:length(names(best))) {         sparams <- paste0(sparams, sprintf("%s=%.2f ", names(best[i]), best[i]))     }     return(spaams) }
get_tune_params(xclf)
get_tune_params <- function(caret_model) {     best <- caret_model$bestTune     sparams <- ""     for (i in 1:length(names(best))) {         sparams <- paste0(sparams, sprintf("%s=%.2f ", names(best[i]), best[i]))     }     return(sparams) }
get_tune_params(xclf)
xclf$dots
xclf$call
xclf$levels
xclf$control
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
xclf$control
get_tune_params(xclf)
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/x_test.R")
c1
c2
t1
t2
xclf$call
xclf$control
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
Best.Model$bestTune
summary_info
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
Proposed
Proposed.Models
t <""
t <-""
paste(t,Proposed.Models)
b <-paste(t,Proposed.Models)
b
b[1]
b[2]
paste(Proposed.Models)
paste0(Proposed.Models)
paste(Proposed.Models, collapse = " ")
rtvs::debug_source("D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/churn_test.R")
library(MASS)
library(MASS)
MASS
library(MASS)
MASS
t <- "MASS"
library(t)
library(get(t))
get(t)
library(t, character.only = TRUE)
names(df_test[,-c("classe")])
ttt <- setdiff(names(df_test),"classe")
ttt
head(df_test)
df_test <- df_test[,ttt]
head(df_test)
library(fastAdaboost)
R.version
?knn
library(class)
knn
strsplit
a<- '"a","b","c"'
a
b <- gsub("\"", a)
b <- gsub('\"', a)
b <- gsub('\"','', a)
b
c <- strsplit(b, ",")
c
c[1]
c[2]
c <- strsplit(b, ",")[[1]]
c
c[1]
c[2]
c[3]
union
?union
?rbind
Train.Accuracy <- c()
Cross.Accuracy <- c()
Cross.Recall <- c()
Cross.Kappa <- c()
Training.Time <- c()
Confusion.Matrices <- c()
Used.Data <- c()
Script.Ver <- c()
Tuning.Params <- c()
summary_info <- data.frame(Used.Data, Script.Ver,
Proposed.Models, Train.Accuracy,
Cross.Accuracy, Cross.Recall, Cross.Kappa,
Training.Time, Tuning.Params)
TRUE | FALSE
TRUE || FALSE
source('D:/Dropbox/_HYPERLOOP/rserver/BehaviourOne/BehaviourOne/products_test.R')
